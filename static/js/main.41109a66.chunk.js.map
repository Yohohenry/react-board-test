{"version":3,"sources":["components/App/App.js","index.js"],"names":["Page","styled","div","Title","h1","MessageForm","form","MessageTextArea","textarea","SubmitButton","button","MessageList","MessageContainer","MessageHead","MessageAuthor","MessageTime","MessageBody","ErrorMessage","Loading","Message","author","time","children","App","useState","messages","setMessages","messageApiError","setMessageApiError","value","setValue","postMessageError","setPostMessageError","isLoadingPostMessage","setIsLoadingPostMessage","fetchMessage","fetch","then","res","json","data","catch","err","useEffect","onSubmit","e","preventDefault","method","headers","body","JSON","stringify","nickname","ok","message","onChange","target","onFocus","row","toString","length","map","Date","createdAt","toLocaleString","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAOMA,EAAOC,IAAOC,IAAV,gEAKJC,EAAQF,IAAOG,GAAV,4CAILC,EAAcJ,IAAOK,KAAV,iDAIXC,EAAkBN,IAAOO,SAAV,4CAGfC,EAAeR,IAAOS,OAAV,gDAIZC,EAAcV,IAAOC,IAAV,iDAIXU,EAAmBX,IAAOC,IAAV,6IAUhBW,EAAcZ,IAAOC,IAAV,iLAQXY,EAAgBb,IAAOC,IAAV,2EAIba,EAAcd,IAAOC,IAAV,0BAEXc,EAAcf,IAAOC,IAAV,qEAKXe,EAAehB,IAAOC,IAAV,gEAKZgB,EAAUjB,IAAOC,IAAV,gPAcb,SAASiB,EAAT,GAA8C,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,SAC/B,OACE,eAACV,EAAD,WACE,eAACC,EAAD,WACE,cAACC,EAAD,UAAgBM,IAChB,cAACL,EAAD,UAAcM,OAEhB,cAACL,EAAD,UAAcM,OA4GLC,MAjGf,WAAgB,IAAD,EACmBC,mBAAS,MAD5B,mBACNC,EADM,KACIC,EADJ,OAEiCF,mBAAS,MAF1C,mBAENG,EAFM,KAEWC,EAFX,OAGaJ,qBAHb,mBAGNK,EAHM,KAGCC,EAHD,OAImCN,qBAJnC,mBAINO,EAJM,KAIYC,EAJZ,OAK2CR,oBAAS,GALpD,mBAKNS,EALM,KAKgBC,EALhB,KAOPC,EAAe,WACnB,OAAOC,MApGT,2EAqGKC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLd,EAAYc,MAEbC,OAAM,SAACC,GACNd,EAAmBc,EAAIjB,cA+C7B,OAHAkB,qBAAU,WACRR,MACC,IAED,eAACnC,EAAD,WACGiC,GAAwB,cAACf,EAAD,yBACzB,cAACf,EAAD,iCACA,eAACE,EAAD,CAAauC,SAvCQ,SAACC,GACxBA,EAAEC,iBACEb,IAGJC,GAAwB,GACxBE,MAAM,8CAA+C,CACnDW,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBC,SAAU,QACVH,KAAMpB,MAGPQ,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLN,GAAwB,GACR,IAAZM,EAAKa,IAITvB,EAAS,IACTK,KAJEH,EAAoBQ,EAAKc,YAM5Bb,OAAM,SAACC,GACNR,GAAwB,GACxBF,EAAoBU,EAAIY,cAW1B,UACE,cAAC/C,EAAD,CACEsB,MAAOA,EACP0B,SAlDqB,SAACV,GAC5Bf,EAASe,EAAEW,OAAO3B,QAkDZ4B,QA/CoB,WAC1BzB,EAAoB,OA+Cd0B,IAAK,KAEP,cAACjD,EAAD,uCACCsB,GAAoB,cAACd,EAAD,UAAec,OAErCJ,GACC,eAACV,EAAD,oCACyBU,EAAgBgC,cAG1ClC,GAAgC,IAApBA,EAASmC,QAAgB,6CACtC,cAACjD,EAAD,UACGc,GACCA,EAASoC,KAAI,SAACP,GAAD,OACX,cAACnC,EAAD,CAEEC,OAAQkC,EAAQF,SAChB/B,KAAM,IAAIyC,KAAKR,EAAQS,WAAWC,iBAHpC,SAKGV,EAAQL,MAJJK,EAAQW,aCjL3BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.41109a66.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst API_ENDPOINT =\n  \"https://student-json-api.lidemy.me/comments?_sort=createdAt&_order=desc\";\n\nconst Page = styled.div`\n  width: 360px;\n  margin: 0 auto;\n`;\n\nconst Title = styled.h1`\n  color: #333;\n`;\n\nconst MessageForm = styled.form`\n  margin-top: 16px;\n`;\n\nconst MessageTextArea = styled.textarea`\n  width: 100%;\n`;\nconst SubmitButton = styled.button`\n  margin-top: 8px;\n`;\n\nconst MessageList = styled.div`\n  margin-top: 16px;\n`;\n\nconst MessageContainer = styled.div`\n  border: 1px solid black;\n  padding: 8px 16px;\n  border-radius: 8px;\n\n  & + & {\n    margin-top: 8px;\n  }\n`;\n\nconst MessageHead = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding-bottom: 4px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.3);\n`;\n\nconst MessageAuthor = styled.div`\n  color: rgba(23, 78, 0.3)\n  font-size: 14px\n`;\nconst MessageTime = styled.div``;\n\nconst MessageBody = styled.div`\n  margin-top: 16px;\n  font-size: 16px;\n`;\n\nconst ErrorMessage = styled.div`\n  margin-top: 16px;\n  color: red;\n`;\n\nconst Loading = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  color: white;\n  font-size: 30px;\n  display: flex;\n  align-items; center;\n  justify-content: center;\n`;\n\nfunction Message({ author, time, children }) {\n  return (\n    <MessageContainer>\n      <MessageHead>\n        <MessageAuthor>{author}</MessageAuthor>\n        <MessageTime>{time}</MessageTime>\n      </MessageHead>\n      <MessageBody>{children}</MessageBody>\n    </MessageContainer>\n  );\n}\n\nMessage.propTypes = {\n  author: PropTypes.string,\n  time: PropTypes.string,\n  children: PropTypes.node,\n};\n\nfunction App() {\n  const [messages, setMessages] = useState(null);\n  const [messageApiError, setMessageApiError] = useState(null);\n  const [value, setValue] = useState();\n  const [postMessageError, setPostMessageError] = useState();\n  const [isLoadingPostMessage, setIsLoadingPostMessage] = useState(false);\n\n  const fetchMessage = () => {\n    return fetch(API_ENDPOINT)\n      .then((res) => res.json())\n      .then((data) => {\n        setMessages(data);\n      })\n      .catch((err) => {\n        setMessageApiError(err.messages);\n      });\n  };\n\n  const handleTextareaChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  const handleTextareaFocus = () => {\n    setPostMessageError(null);\n  };\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    if (isLoadingPostMessage) {\n      return;\n    }\n    setIsLoadingPostMessage(true);\n    fetch(\"https://student-json-api.lidemy.me/comments\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        nickname: \"henry\",\n        body: value,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setIsLoadingPostMessage(false);\n        if (data.ok === 0) {\n          setPostMessageError(data.message);\n          return;\n        }\n        setValue(\"\");\n        fetchMessage();\n      })\n      .catch((err) => {\n        setIsLoadingPostMessage(false);\n        setPostMessageError(err.message);\n      });\n  };\n\n  useEffect(() => {\n    fetchMessage();\n  }, []);\n  return (\n    <Page>\n      {isLoadingPostMessage && <Loading>Loading...</Loading>}\n      <Title>留言板</Title>\n      <MessageForm onSubmit={handleFormSubmit}>\n        <MessageTextArea\n          value={value}\n          onChange={handleTextareaChange}\n          onFocus={handleTextareaFocus}\n          row={10}\n        />\n        <SubmitButton>送出留言</SubmitButton>\n        {postMessageError && <ErrorMessage>{postMessageError}</ErrorMessage>}\n      </MessageForm>\n      {messageApiError && (\n        <ErrorMessage>\n          Something went wrong. {messageApiError.toString()}\n        </ErrorMessage>\n      )}\n      {messages && messages.length === 0 && <div>No Message</div>}\n      <MessageList>\n        {messages &&\n          messages.map((message) => (\n            <Message\n              key={message.id}\n              author={message.nickname}\n              time={new Date(message.createdAt).toLocaleString()}\n            >\n              {message.body}\n            </Message>\n          ))}\n      </MessageList>\n    </Page>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}